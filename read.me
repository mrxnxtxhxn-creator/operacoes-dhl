Sistema de Gest√£o e Automa√ß√£o de Docas
Este projeto √© um sistema web completo para a gest√£o e automa√ß√£o do fluxo de descarga de cami√µes num centro de distribui√ß√£o. A aplica√ß√£o √© dividida em dois componentes principais: um portal para os motoristas se registarem e acompanharem o seu status, e um painel de controlo para os gestores monitorizarem toda a opera√ß√£o em tempo real.

‚ú® Funcionalidades
Portal do Motorista: Uma interface simples para os motoristas se registarem na fila, informando nome, empresa, n√∫mero de WhatsApp e volume de pacotes.

Painel do Gestor: Um dashboard completo que exibe a fila de espera, o status de todas as docas, KPIs (Key Performance Indicators) e um log de notifica√ß√µes.

Automa√ß√£o de Chamadas: O gestor inicia a opera√ß√£o com um clique, e o sistema chama automaticamente o pr√≥ximo motorista da fila quando uma doca fica livre.

Comunica√ß√£o em Tempo Real: Todas as telas (gestor e motoristas) s√£o atualizadas instantaneamente usando WebSockets (Socket.IO), sem a necessidade de atualizar a p√°gina.

Simula√ß√£o de Notifica√ß√µes via WhatsApp: O painel do gestor exibe um log que simula as mensagens que seriam enviadas para os motoristas, facilitando o acompanhamento da comunica√ß√£o.

Visualiza√ß√£o de Dados: Gr√°ficos que mostram as m√©tricas de produtividade, como as entradas de cami√µes por hora.

üõ†Ô∏è Tecnologias Utilizadas
Frontend: HTML5, Tailwind CSS, JavaScript

Backend: Node.js, Express.js

Comunica√ß√£o em Tempo Real: Socket.IO

Visualiza√ß√£o de Gr√°ficos: Chart.js

üöÄ Como Executar o Projeto Localmente
Para executar este sistema na sua m√°quina, siga os passos abaixo.

Pr√©-requisitos:

√â necess√°rio ter o Node.js instalado.

Passos:

Clone o reposit√≥rio:

git clone [https://github.com/seu-usuario/seu-repositorio.git](https://github.com/seu-usuario/seu-repositorio.git)
cd seu-repositorio

Instale as depend√™ncias do servidor:
Navegue at√© √† pasta do projeto e execute o seguinte comando para instalar o Express, Socket.IO e CORS.

npm install express socket.io cors

Inicie o servidor:
Ap√≥s a instala√ß√£o, inicie o servidor de automa√ß√£o.

node server.js

O terminal dever√° exibir a mensagem: Servidor de automa√ß√£o rodando em http://localhost:3000.

Aceda √†s aplica√ß√µes:

Abra o Painel do Gestor no seu navegador acedendo a dashboard.html.

Abra o Portal do Motorista numa outra aba ou janela do navegador acedendo a motorista.html.

üìÇ Estrutura dos Ficheiros
dashboard.html: O painel de controlo para o gestor da opera√ß√£o.

motorista.html: O portal de registo e status para os motoristas.

server.js: O servidor backend (Node.js) que cont√©m toda a l√≥gica de automa√ß√£o.

package.json: Ficheiro que define as depend√™ncias e informa√ß√µes do projeto Node.js.

README.md: Este ficheiro.
